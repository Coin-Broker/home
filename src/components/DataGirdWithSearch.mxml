<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  height="100%" width="100%">
	<fx:Metadata>
		[Event(name="selectionChange", type="spark.events.GridSelectionEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.collections.ArrayCollection;
			import mx.utils.ObjectUtil;
			
			import spark.events.TextOperationEvent;
									
			[Bindable]
			public var columns:ArrayList;
			
			[Bindable]
			public var prompt:String;
			private var _dataProvider:ArrayCollection;
			
			[Bindable]
			public function get dataProvider():ArrayCollection
			{
				return _dataProvider;
			}

			public function set dataProvider(value:ArrayCollection):void
			{
				_dataProvider = new ArrayCollection(value.source);
				updateFilter(null);
			}
			
			private function filterForText(item:Object):Boolean
			{				
				for each (var itemProp:String in ObjectUtil.getClassInfo(item).properties) 
				{
					if(item[itemProp] is String && item[itemProp].toLowerCase().search(filterText.text.toLowerCase()) != -1)
						return true;
				}
				return false;	
			}
			
			protected function updateFilter(event:TextOperationEvent):void
			{
				dataProvider.filterFunction = filterForText;
				dataProvider.refresh();
			}
			
			public function get selectedItem():Object
			{
				return theGrid.selectedItem;
			}

		]]>
	</fx:Script>
	
	<s:HGroup>
		<s:TextInput id="filterText" prompt="{prompt}" change="updateFilter(event)"/>
		<s:Button label="Clear" click="{filterText.text = ''; updateFilter(null);}"/>
	</s:HGroup>	
	
	<s:DataGrid id="theGrid" 
				width="100%" height="100%"
				columns="{columns}"
				selectionChange="{dispatchEvent(new GridSelectionEvent(GridSelectionEvent.SELECTION_CHANGE))}"
				dataProvider="{dataProvider}">
		
	</s:DataGrid>
</s:VGroup>
