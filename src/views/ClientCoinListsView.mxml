<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx"
					height="100%" width="100%" xmlns:components="components.*" >
	
	
	<fx:Declarations>
		
	</fx:Declarations>
	
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import model.ModelLocator;	
			[Bindable]
			public var modelLocator:ModelLocator = ModelLocator.getInstance();
			
			[Bindable]
			private var clientSize:int
			
			[Bindable]
			public var currentView:String = "clients";
			
			private var _clients:ArrayCollection;// =
			private var _coins:ArrayCollection;// =
			
			[Bindable]
			public var dataProvider:ArrayCollection = new ArrayCollection();;
			
			
			public function get clients():ArrayCollection
			{
				return _clients;
			}

			public function set clients(value:ArrayCollection):void
			{
				_clients = value;
				clientSize = value.length;
				dataProvider = currentView == "clients" ? new ArrayCollection(clients.source):  new ArrayCollection(coins.source);
			}

			public function get coins():ArrayCollection
			{
				return _coins;
			}

			public function set coins(value:ArrayCollection):void
			{
				_coins = value;
				dataProvider = currentView == "clients" ? new ArrayCollection(clients.source):  new ArrayCollection(coins.source);
			}

			protected function switchView(event:MouseEvent):void
			{
				currentView = currentView == "clients" ? "coins" : "clients"
				dataProvider = currentView == "clients" ? new ArrayCollection(clients.source):  new ArrayCollection(coins.source);
			}			
		]]>
	</fx:Script>
	
	
	<s:VGroup id="clientStockListView" width="100%" height="100%">
		<s:HGroup verticalAlign="bottom">
			<s:Button id="theButton" 
					  label="{'Switch to View ' + (currentView == 'clients' ? 'Coins' : 'Clients') }"
					  click="switchView(event)"/>
			<s:Label text="{'Total of ' + clientSize + ' Clients'}"
					 visible="{currentView == 'clients'}"/>
		</s:HGroup>
				
		
		<components:DataGirdWithSearch 
			dataProvider="{dataProvider}"
			prompt="{(currentView == 'clients' ? 'Client Search' : 'Coin Search')}">
			
		</components:DataGirdWithSearch>

	</s:VGroup>
	
</s:NavigatorContent>