<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx"
					height="100%" width="100%" xmlns:components="components.*" >
	
	
	<fx:Declarations>
		<s:NumberFormatter id="currencyFormater" fractionalDigits="2" />
	</fx:Declarations>
	
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridItemRenderer;
			
			import spark.events.GridSelectionEvent;
			
			import model.ModelLocator;
			
			import services.ServiceDelegate;
			import services.Services;	
			[Bindable]
			public var modelLocator:ModelLocator = ModelLocator.getInstance();
			
			[Bindable]
			private var clientSize:int
			
			[Bindable]
			public  var cash:Number
			
			[Bindable]
			public var currentView:String = "clients";
			
			private var _clients:ArrayCollection;// =
			private var _coins:ArrayCollection;// =
			
			[Bindable]
			public var dataProvider:ArrayCollection = new ArrayCollection();;
			
			
			public function get clients():ArrayCollection
			{
				return _clients;
			}

			public function set clients(value:ArrayCollection):void
			{
				_clients = value;
				clientSize = value.length;
				dataProvider = currentView == "clients" ? new ArrayCollection(clients.source):  new ArrayCollection(coins.source);
			}

			[Bindable]
			public function get coins():ArrayCollection
			{
				return _coins;
			}

			public function set coins(value:ArrayCollection):void
			{
				_coins = value;
				dataProvider = currentView == "clients" ? new ArrayCollection(clients.source):  new ArrayCollection(coins.source);
			}

			protected function switchView(event:MouseEvent):void
			{
				currentView = currentView == "clients" ? "coins" : "clients"
				dataProvider = currentView == "clients" ? new ArrayCollection(clients.source):  new ArrayCollection(coins.source);
			}			
			
			protected function dataGridClicked(event:MouseEvent):void
			{		
				if(currentView == 'clients')
				{
					new ServiceDelegate(Services.getClient, "selectedClient", dateGrid.selectedItem);
					modelLocator.currentView = 0;
				}
				
			}
			
			protected function myADG_doubleClickHandler(event:MouseEvent):void
			{
				if(!(event.target is AdvancedDataGridItemRenderer))
					return;
				var adv:AdvancedDataGridItemRenderer =  event.target as AdvancedDataGridItemRenderer;
				if(adv.data.hasOwnProperty("children"))
					return;
				else 
					new ServiceDelegate(Services.getClient, "selectedClient", adv.data);
					modelLocator.currentView = 0;
				
			}
			
		]]>
	</fx:Script>
	
	
	<s:VGroup id="clientStockListView" width="100%" height="100%">
		<s:HGroup verticalAlign="bottom">
			<s:Button id="theButton" 
					  label="{'Switch to View ' + (currentView == 'clients' ? 'Coins' : 'Clients') }"
					  click="switchView(event)"/>
			<s:Label text="{'Total of ' + clientSize + ' Clients'}"
					 visible="{currentView == 'clients'}"/>
			
			<s:Label text="{'Total Cash On Hand is  ' + currencyFormater.format(cash) + ' Dollars'}"
					 visible="{currentView != 'clients'}"/>
		</s:HGroup>
				
		
		<components:DataGirdWithSearch id="dateGrid" doubleClickEnabled="true" 
									   includeInLayout="{currentView == 'clients'}" visible="{currentView == 'clients'}"  
									   doubleClick="dataGridClicked(event)"
									   dataProvider="{dataProvider}"
									   prompt="{(currentView == 'clients' ? 'Client Search' : 'Coin Search')}">
			
		</components:DataGirdWithSearch>
		
		<mx:AdvancedDataGrid id="myADG" 
							 includeInLayout="{currentView != 'clients'}" visible="{currentView != 'clients'}" 
							 width="100%" height="100%" 
							 initialize="gc.refresh();"
							 doubleClickEnabled="true"
							 doubleClick="myADG_doubleClickHandler(event)">        
			<mx:dataProvider>
				<mx:GroupingCollection2 id="gc" source="{coins}">
					<mx:Grouping label="coinSymbol">
						<mx:GroupingField name="coinSymbol">
							<mx:summaries>
								<mx:SummaryRow summaryPlacement="group">
									<mx:fields>
										<mx:SummaryField2 dataField="shares" 
														  label="Total Shares" summaryOperation="SUM"/>
									</mx:fields>
								</mx:SummaryRow>
							</mx:summaries>
						</mx:GroupingField>
						<!--<mx:GroupingField name="clientID">
						<mx:summaries>
							<mx:SummaryRow summaryPlacement="group">
								<mx:fields>
									<mx:SummaryField2 dataField="shares" 
													  label="Total Shares" summaryOperation="SUM"/>
								</mx:fields>
							</mx:SummaryRow>
						</mx:summaries>
						</mx:GroupingField>-->
					</mx:Grouping>
				</mx:GroupingCollection2>
			</mx:dataProvider>        
			
			<mx:columns>
				<mx:AdvancedDataGridColumn dataField="coinSymbol"/>
				<mx:AdvancedDataGridColumn dataField="clientId"/>
				<mx:AdvancedDataGridColumn dataField="firstName"/>
				<mx:AdvancedDataGridColumn dataField="lastName"/>
				<mx:AdvancedDataGridColumn dataField="shares"/>
				<mx:AdvancedDataGridColumn dataField="Total Shares"/>
			</mx:columns>
		</mx:AdvancedDataGrid>

	</s:VGroup>
	
</s:NavigatorContent>