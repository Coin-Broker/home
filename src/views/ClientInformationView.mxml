<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 height="100%" width="100%" xmlns:local="*" xmlns:components="components.*" >
	
	<fx:Declarations>
		<s:NumberValidator source="{dollarAmount}" property="text" maxValue="9999999.99"/> 
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.utils.ObjectUtil;
			
			import spark.events.TextOperationEvent;
			
			import model.ClientVO;
			
			private var _client:ClientVO; 
			[Bindable]
			private var clientCoins:ArrayCollection;
			
			[Bindable]
			public var editing:Boolean = false;
			
			[Bindable]
			public function get client():ClientVO
			{
				return _client;
			}

			public function set client(value:ClientVO):void
			{
				_client = value;
				//clientCoins = new ArrayCollection(value.coins.source);
			}

			protected function updateClientCoinFilter(event:TextOperationEvent):void
			{
				clientCoins.filterFunction = clientCoinsFilterForText;
				clientCoins.refresh();
			}
			
			private function clientCoinsFilterForText(item:Object):Boolean
			{				
				for each (var itemProp:String in ObjectUtil.getClassInfo(item).properties) 
				{
					if(item[itemProp] is String && item[itemProp].toLowerCase().search(coinFilterText.text.toLowerCase()) != -1)
						return true;
				}
				return false;	
			}
		]]>
	</fx:Script>
	
	<s:Rect id="background" height="100%" width="100%">
		<s:fill>
			<s:SolidColor color="#cccccc"/>
		</s:fill>
	</s:Rect>
	<s:VGroup height="100%" width="100%"
			  left="10" right="10" top="10" bottom="10">
		<s:HGroup width="100%" >
			<components:HNameValueLabel label="ID: " 
								   value="{client.id}"/>
			<s:Spacer width="100%"/>
			<components:HNameValueLabel label="Name: "
								   editable="{editing}"
								   value="{client.firstName + ' ' + client.lastName}"/>
		</s:HGroup>
		<s:HGroup width="100%">
			<components:HNameValueLabel label="Address: " 
								   editable="{editing}"
								   value="{client.address}"/>
			<s:Spacer width="100%"/>			
			<components:HNameValueLabel label="City: "
								   editable="{editing}"
								   value="{client.city}"/>
			<s:Spacer width="100%"/>			
			<components:HNameValueLabel label="State: "
								   editable="{editing}"
								   value="{client.state}"/>
		</s:HGroup>
		<s:HGroup width="100%">
			<components:HNameValueLabel label="Phone: "
								   editable="{editing}"
								   value="{client.phone}"/>
			<s:Spacer width="100%"/>
			<components:HNameValueLabel label="Balance: "
								   editable="{editing}"
								   value="{client.accountBalance}"/>
			<s:Spacer width="100%"/>
			<components:HNameValueLabel label="PIN: "
								   editable="{editing}"
								   value="{client.pinCode}"/>
		</s:HGroup>
		<s:HGroup width="100%" verticalAlign="middle">
			<s:Label text="Number of Shares: " fontWeight="bold"/>
			<s:TextInput prompt="Number of shares" width="33%" restrict="[0-9]"/>
			<s:Button label="Buy" width="33%"/>
			<s:Button label="Sell" width="33%"/>
		</s:HGroup>
		<s:HGroup width="100%">
			<s:TextInput prompt="Amount to Withdraw or Add" 
						 id="dollarAmount"
						 width="33%"
						 restrict="[0-9.]"/>
			<s:Button label="Add Funds" width="33%"/>
			<s:Button label="Withdraw Funds" width="33%" />
		</s:HGroup>
		<s:HGroup width="100%">
			<s:Button label="{editing? 'Save' : 'Update Info'}" click="{editing=!editing}"/>			
		</s:HGroup>
		
		
		<s:HGroup>
			<s:TextInput id="coinFilterText" prompt="Coin Search" change="updateClientCoinFilter(event)"/>
			<s:Button label="Clear" click="{coinFilterText.text = '';updateClientCoinFilter(null);}"/>
		</s:HGroup>			
		<s:DataGrid width="100%" height="100%" 
					dataProvider="{clientCoins}">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn dataField="name" headerText="Coin"/>
					<s:GridColumn dataField="symbol" headerText="Symbol"/>
					<s:GridColumn dataField="count" headerText="Quanity"/>
					<s:GridColumn dataField="basis" headerText="Basis"/>
				</s:ArrayList>
			</s:columns>
			
		</s:DataGrid>
		
	</s:VGroup>
	
</s:Group>
